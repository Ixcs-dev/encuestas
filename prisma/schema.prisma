datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Encuesta {
  id                        String   @id @default(cuid())
  createdAt                 DateTime @default(now())
  rol                       String
  rolOtro                   String?
  perteneceSemillero        String
  tiempoSemillero           String?
  gestionProyectos          String
  gestionProyectosOtro      String?
  satisfaccion              String
  problemas                 String
  problemasOtro             String?
  caracteristicas           String
  caracteristicasOtro       String?
  metodologiasAgiles        String
  disposicionSoftware       String
  probabilidadRecomendacion String
  funcionalidadesAdicionales String?
  expectativas              String?
  comentarios               String?
}



model User {
  id             Int      @id @default(autoincrement())
  name           String?
  email          String   @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}




